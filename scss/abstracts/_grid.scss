@use 'sass:math';
@use 'variables' as *;
@use 'mixins/breakpoints' as *;

.row {
  display: flex;
  flex-wrap: row wrap;
}

@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    padding: $val;
  }

  .gap-#{$key} {
    padding-left: 0;
    padding-right: 0;
  }
}

@each $val in $layout-val {
  .jst-cnt-#{$val} {
    justify-content: $val;
  }

  .align-items-#{$val} {
    align-items: $val;
  }

  .align-cnt-#{$val} {
    align-content: $val;
  }
}

@include xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}

@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}

@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}

@include xxl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xxl {
      flex-grow: 0;
      width: math.div($i * 100, $grid-columns);
    }
  }
}
